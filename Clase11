#1
SELECT country, COUNT(*) as cant_ciudades
FROM city
	INNER JOIN country
			USING(country_id)
GROUP BY country, country_id;

#2
SELECT country, COUNT(*) as cant_ciudades
FROM city
	INNER JOIN country
			USING(country_id)
GROUP BY country
HAVING COUNT(*) > 10
ORDER BY country DESC;

#3
SELECT customer.first_name, customer.last_name,
		(SELECT address.address
		 FROM address
		 WHERE customer.address_id = address.address_id) AS address,
		 COUNT(*) as total_films,
		 (SELECT SUM(amount)
		 FROM payment
		 WHERE customer.customer_id = payment.customer_id) AS total_plata
FROM customer
	INNER JOIN rental
		ON customer.customer_id = rental.customer_id
GROUP BY customer.customer_id
ORDER BY total_plata DESC;

#4
SELECT film.film_id, film.title
FROM film
WHERE film.film_id NOT IN(SELECT film_id
			FROM inventory);
							
#5 
SELECT DISTINCT inventory.inventory_id, film.title, rental.*
FROM film
INNER JOIN inventory USING (film_id)
LEFT JOIN rental USING (inventory_id)
WHERE customer_id IS NULL;

#6

SELECT DISTINCT customer.customer_id, customer.first_name, customer.last_name, inventory.store_id, film.title
FROM film
INNER JOIN inventory
	ON film.film_id = inventory.film_id
INNER JOIN rental
	ON inventory.inventory_id = rental.inventory_id
LEFT JOIN customer
	ON rental.customer_id = customer.customer_id
WHERE rental.return_date IS NOT NULL
ORDER BY inventory.store_id, customer.last_name;

#7
SELECT DISTINCT city.city, country.country, CONCAT(staff.first_name, '' ,staff.last_name) AS manager, SUM(amount)
FROM store
	INNER JOIN address USING(address_id)
	INNER JOIN city USING(city_id)
	INNER JOIN country USING(country_id)
	INNER JOIN staff ON store.manager_staff_id = staff.staff_id
	INNER JOIN payment ON staff.staff_id = payment.staff_id
GROUP BY store.store_id;b



#8
SELECT DISTINCT film.rating, SUM(amount)
FROM film
INNER JOIN inventory USING(film_id)
INNER JOIN rental USING(inventory_id)
INNER JOIN payment USING(rental_id)
GROUP BY film.rating;

#9
SELECT CONCAT(actor.first_name, ' ', actor.last_name) AS actor, COUNT(*) AS total_film
FROM film
INNER JOIN film_actor USING(film_id)
INNER JOIN actor USING(actor_id)
GROUP BY actor
ORDER BY total_film DESC
LIMIT 1;

#10
SELECT category.name, AVG(`length`) AS average
FROM film
INNER JOIN film_category USING(film_id)
INNER JOIN category USING(category_id)
GROUP BY category.name
ORDER BY average;
